{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/test/Test.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","_componentDidMount","inherits","createClass","key","value","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","delete","t0","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","float","color","bind","Link","to","marginRight","Contacts","Fragment","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classname","is-invalid","defaultProps","AddContact","errors","onSubmit","e","_this$state","newContact","preventDefault","abrupt","post","history","push","defineProperty","target","_this$state2","layout_TextInputGroup","EditContact","updContact","match","params","put","Header","branding","href","About","NotFound","Test","title","body","fetch","then","response","json","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e70bb804.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch(action.type) {\n    case 'DELETE_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.filter(contact => \n        contact.id !== action.payload)\n      };\n    case 'ADD_CONTACT':\n      return {\n        ...state,\n        contacts: [action.payload, \n        ...state.contacts]\n      };\n    case 'UPDATE_CONTACT':\n      return {\n        ...state,\n        contacts: state.contacts.map(contact => contact.id === action.payload.id ? (contact = action.payload) : contact )\n      };                          \n    default:\n      return state;\n  }\n}\n\nexport class Provider extends Component{\n  state = {\n    contacts: [],\n    dispatch: action => this.setState(state => reducer(state,action))\n  };\n\n  async componentDidMount(){\n    const res = await axios\n      .get('https://jsonplaceholder.typicode.com/users');\n\n    this.setState({contacts: res.data});\n\n  }\n\n  render(){\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Consumer } from '../../context';\nimport axios from 'axios';\n\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false\n  };\n\n  onDeleteClick = async (id, dispatch) => {\n    try{\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n\n    dispatch({type: 'DELETE_CONTACT', payload: id});\n    }catch(e){\n      dispatch({type: 'DELETE_CONTACT', payload: id});\n    }\n  };\n\n  render() {\n    const {id, name, email, phone} = this.props.contact;\n    const { showContactInfo } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch} =value;\n          return (\n            <div className=\"card card-body mb-3\">\n        <h4>{name}{' '} \n        <i \n          onClick={()=>this.setState({showContactInfo: !this.state.showContactInfo})\n        } \n          className=\"fas fa-sort-down\"\n          style={{cursor: 'pointer'}}\n        /> \n        <i \n          className=\"fas fa-times\" \n          style={{ cursor: 'pointer',float: 'right',color:'red'}}\n          onClick={this.onDeleteClick.bind(this, id, dispatch)}\n        />\n        <Link to={`contact/edit/${id}`}>\n          <i \n          className=\"fas fa-pencil-alt\"\n          style ={{\n            cursor: 'pointer',\n            float: 'right',\n            color: 'black',\n            marginRight: '1rem'\n          }}\n          ></i>\n        </Link>\n        </h4>\n          {showContactInfo ? (\n          <ul className=\"list-group\">\n            <li className=\"list-group-item\"> Email: {email}</li>\n            <li className=\"list-group-item\">Phone:{phone}</li>\n          </ul>\n        ) : null}       \n      </div>\n          )\n        }}\n      </Consumer>     \n    );\n  }\n}\n\nContact.propTypes ={\n  contact: PropTypes.object.isRequired\n}\n\n\nexport default Contact;","import React, { Component } from 'react';\nimport Contact from './Contact';\nimport { Consumer } from '../../context';\n\nclass Contacts extends Component {\n    render() {\n    return(\n      <Consumer>\n        {value => {\n          const {contacts} = value;\n          return(\n            <React.Fragment>\n              <h1 className=\"display-4 mb-2\">\n              <span className=\"text-danger\">Contact</span> List\n              </h1>\n              {contacts.map(contact =>(\n              <Contact \n                key={contact.id}\n                contact={contact} \n              /> \n              ))}  \n            </React.Fragment>\n          )\n        }}\n      </Consumer>\n    )    \n  }\n}\n\nexport default Contacts;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classname from 'classname';\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input \n      type={type}\n      name={name}\n      className={classname('form-control form-control-lg', {\n        'is-invalid': error\n      })}\n      placeholder={placeholder}\n      value={value}\n      onChange={onChange}\n      />   \n      {error && <div className=\"invalid-feedback\">{error}</div> }        \n    </div>\n  );\n};\n\nTextInputGroup.propTypes = {\n  label: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string\n};\n\nTextInputGroup.defaultProps = {\n  type: 'text'\n};\n\nexport default TextInputGroup;","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport axios from 'axios';\n\n\n\nclass AddContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  };\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    \n    const { name, email, phone } = this.state;\n\n    // check For Errors\n    if(name === ''){\n      this.setState({errors: {name: 'Name is Required'}});\n      return;\n    }\n\n    if(email === ''){\n      this.setState({errors: {email: 'Email is Required'}});\n      return\n    }\n\n    if(phone === ''){\n      this.setState({errors: {phone: 'Phone is Required'}});\n      return;\n    }\n\n    const newContact = {\n      name,\n      email,\n      phone\n    };\n\n    const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact)\n      \n    dispatch({type: 'ADD_CONTACT', payload: res.data });\n\n    //Clearing input\n    this.setState({\n      name: '',\n      email: '',\n      phone: ''\n    });\n\n    this.props.history.push('/');\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n\n  render() {\n    const { name,email,phone,errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return(\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this,dispatch)}>\n                  <TextInputGroup\n                  label=\"Name\"\n                  name=\"name\"\n                  placeholder=\"Enter Name...\"\n                  value={name}\n                  onChange={this.onChange}\n                  error={errors.name}\n                  />\n                  <TextInputGroup\n                  label=\"Email\"\n                  name=\"email\"\n                  type=\"email\"\n                  placeholder=\"Enter Email...\"\n                  value={email}\n                  onChange={this.onChange}\n                  error={errors.email}\n                  />\n                  <TextInputGroup\n                  label=\"Phone\"\n                  name=\"phone\"\n                  placeholder=\"Enter Phone...\"\n                  value={phone}\n                  onChange={this.onChange}\n                  error={errors.phone}\n                  />\n\n\n                  <input \n                  type=\"submit\" \n                  value=\"Add Contact\" \n                  className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>        \n            </div>\n  \n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n\nexport default AddContact;","import React, { Component } from 'react';\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport axios from 'axios';\n\n\n\nclass EditContact extends Component {\n  state = {\n    name: '',\n    email: '',\n    phone: '',\n    errors: {}\n  };\n\n  async componentDidMount(){\n    const { id } = this.props.match.params;\n    const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`)\n\n    const contact = res.data;\n\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone\n    });\n  }\n\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n    \n    const { name, email, phone } = this.state;\n\n    // check For Errors\n    if(name === ''){\n      this.setState({errors: {name: 'Name is Required'}});\n      return;\n    }\n\n    if(email === ''){\n      this.setState({errors: {email: 'Email is Required'}});\n      return\n    }\n\n    if(phone === ''){\n      this.setState({errors: {phone: 'Phone is Required'}});\n      return;\n    }\n    \n    const updContact = {\n      name,\n      email,\n      phone\n    }\n\n    const { id } = this.props.match.params;\n\n    const res = await axios.put(` https://jsonplaceholder.typicode.com/users/${id}`,updContact);\n\n    dispatch({type: 'UPDATE_CONTACT', payload: res.data});\n\n    //Clearing input\n    this.setState({\n      name: '',\n      email: '',\n      phone: ''\n    });\n\n    this.props.history.push('/');\n  };\n\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\n\n\n  render() {\n    const { name,email,phone,errors } = this.state;\n\n    return (\n      <Consumer>\n        {value => {\n          const { dispatch } = value;\n          return(\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Edit Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this,dispatch)}>\n                  <TextInputGroup\n                  label=\"Name\"\n                  name=\"name\"\n                  placeholder=\"Enter Name...\"\n                  value={name}\n                  onChange={this.onChange}\n                  error={errors.name}\n                  />\n                  <TextInputGroup\n                  label=\"Email\"\n                  name=\"email\"\n                  type=\"email\"\n                  placeholder=\"Enter Email...\"\n                  value={email}\n                  onChange={this.onChange}\n                  error={errors.email}\n                  />\n                  <TextInputGroup\n                  label=\"Phone\"\n                  name=\"phone\"\n                  placeholder=\"Enter Phone...\"\n                  value={phone}\n                  onChange={this.onChange}\n                  error={errors.phone}\n                  />\n\n\n                  <input \n                  type=\"submit\" \n                  value=\"Update Contact\" \n                  className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>        \n            </div>\n  \n          )\n        }}\n      </Consumer>\n    )\n  }\n}\n\nexport default EditContact;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\n\nconst Header = (props) => {\n  const { branding } = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand\">{branding}</a>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n            <Link to=\"/\" className=\"nav-link\">\n            <i className=\"fas fa-home\"></i> Home</Link></li>\n            <li className=\"nav-item\">\n            <Link to=\"/contact/add\" className=\"nav-link\">\n            <i className=\"fas fa-plus\"></i> Add</Link></li>\n            <li className=\"nav-item\">\n            <Link to=\"/about\" className=\"nav-link\">\n            <i className=\"fas fa-info\"></i> About</Link></li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nHeader.defaultProps = {\n  branding: 'My Application'\n};\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired\n};\n\nexport default Header;","import React from 'react'\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple App to Manage contacts</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\"> <span className=\"text-danger\">404</span> Page Not Found</h1>\n      <p className=\"lead\">Sorry, That page does not exist</p>\n    </div>\n  )\n}\n","import React, { Component } from 'react'\n\nclass Test extends Component {\n  state = {\n    title: '',\n    body:''\n\n  };\n\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/todos/1')\n      .then(response => response.json())\n      .then(data => this.setState({\n        title: data.id,\n        body: data.title\n      })\n      );\n  }\n\n  // componentWillMount(){\n  //   console.log('Component will mount');\n  // }\n  // componentDidUpdate(){\n  //   console.log('Component Did update...');\n  // }\n\n  // componentWillUpdate(){\n  //   console.log('Component will update...');\n  // }\n\n  // componentWillReceiveProps(nextProps, nextState){\n  //   console.log('ComponentWillReceiveProps');\n  // }\n\n  // static getDerivedStateFromProps(nextProps, prevState){\n  //   return null;\n  // }\n\n  // getSnapshotBeforeUpdate(prevProps, prevState){\n  //   console.log('getSnapshotBeforeUpdate');\n  // }\n\n  render() {\n    const {title, body } = this.state;\n\n    return (\n      <div>\n        <h1>{title}</h1>\n        <p>{body}</p>\n      </div>\n    );\n  }\n}\n\nexport default Test;","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport NotFound from './components/pages/NotFound';\nimport Test from './components/test/Test';\n\nimport { Provider } from './context';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';  \n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n          <Router>\n          <div className=\"App\">\n            <Header branding =\"Contact manager\"/>\n            <div className=\"container\">\n              <Switch>\n                <Route exact path='/' component={Contacts}/>\n                <Route exact path='/contact/add' component={AddContact }/>\n                <Route exact path='/contact/edit/:id' component={EditContact }/>\n                <Route exact path=\"/about\" component={About}/>\n                <Route exact path=\"/test\" component={Test}/>\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n ","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n// import registerServiceWorker from './registerServiceWorker'; \n\n\nReactDOM.render(<App />, document.getElementById('root'));\n// registerServiceWorker()\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}